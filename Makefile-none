##############################################################################
#
# Helper for building a package with just files (i.e. no build rules)
#
# Variables:
#   NAME        : (optional) name to be released, e.g. groot-eclipse-neon-amd64
#   VERSION     : major.minor.patch of the release
#   TARBALL_URL : download url to the tarball (file:// or http://)
#
##############################################################################
#
# https://www.debian.org/doc/manuals/debmake-doc/ch08.en.html#nomakefile
#
##############################################################################

NAME?=$(shell basename ${CURDIR})
PACKAGE_NAME=$(subst _,-,${NAME})
TARBALL_URL?=https://you.must.define/TARBALL_URL.tar.gz
TARBALL=$(shell basename ${TARBALL_URL})
ORIG_TARBALL=${PACKAGE_NAME}_${VERSION}.orig.tar.gz


dude:
	@echo "Tarball URL: ${TARBALL_URL}"
	@echo "Tarball: ${TARBALL}"

help:
	@echo "Targets"
	@echo ""
	@echo "  pristine : cleans all temporaries and source tarballs"
	@echo "  clean    : cleans only temporaries"
	@echo "  download : downloads/builds an orig.tar.gz source tarball"
	@echo "  changelog: edit the changelog"
	@echo "  build    : generates an unsigned source pkg & deb in ./build [req: download]"
	@echo "  sign     : signs a source package                            [req: build]"
	@echo "  upload   : sends it over to the ppa                          [req: sign]"
	@echo "  release  : build, sign, upload                               [req: download]"

clean:
	@echo "Cleaning temporary build directories"
	@rm -rf build

pristine: clean
	@echo "Cleaning downloaded tarballs and associated directories"
	@rm -f ${TARBALL}
	@rm -f ${ORIG_TARBALL}
	@rm -rf ${PACKAGE_NAME}-${VERSION}

# make sure to use -n with gzip so filename and timestamp is not archived
# otherwise ppa will complain it's getting a different original 
download: pristine
	curl -o ${TARBALL} ${TARBALL_URL}
	@tar -xzf ${TARBALL}
	# 1) Assume the tarball creates the ${PACKAGE_NAME}-${VERSION} folder
	# 2) carefully gzip it up WITHOUT the time stamp (gzip -n)
	# so launchpad doesn't have a mickey finn when you try to upload a
	# different orig tarball when building a debian revision > 1 deb
	@tar -cvf ${PACKAGE_NAME}_${VERSION}.orig.tar ${PACKAGE_NAME}-${VERSION}
	@gzip -n ${PACKAGE_NAME}_${VERSION}.orig.tar
	@rm ${TARBALL}
	@rm -rf ${PACKAGE_NAME}-${VERSION}

build: clean
	@mkdir -p build
	@tar -xzf ${ORIG_TARBALL} -C build
	@ln -s ../${ORIG_TARBALL} build/${ORIG_TARBALL}
	@cp -r debian build/${PACKAGE_NAME}-${VERSION}
	@cd build/${PACKAGE_NAME}-${VERSION}; dpkg-buildpackage -us -uc -sa

sign:
	cd build/${PACKAGE_NAME}-${VERSION}/debian; debuild -S -sa

upload:
	cd build; dput ppa:d-stonier/snorriheim ${PACKAGE_NAME}_*_source.changes

release: build sign upload

# this vendor=override is broken...just clears the 'ubuntu1' default
changelog:
	dch -i --distribution=bionic --urgency=low --increment --vendor=override
